@page "/tasksmanagement/create"
@using Client.Services
@inject NavigationManager Navigation
@inject TaskService TaskService
@inject IJSRuntime JS

<div class="w-50 mx-auto my-5">
    <h3>タスクの作成</h3>
    <ConfirmDialog @ref="dialog" />

    <EditForm Model="taskDetail" OnValidSubmit="SaveTask">
        <DataAnnotationsValidator />
        <div>
            <label>名称:</label>
            <InputText @bind-Value="taskDetail.Name" class="form-control" />
            <ValidationMessage For="@(() => taskDetail.Name)" />
        </div>

        <div>
            <label>担当:</label>
            <InputText @bind-Value="taskDetail.Assignee" class="form-control" />
            <ValidationMessage For="@(() => taskDetail.Assignee)" />
        </div>

        <div>
            <label>内容:</label>
            <InputTextArea @bind-Value="taskDetail.Description" class="form-control" />
        </div>

        <div>
            <label>開始日:</label>
            <InputDate @bind-Value="taskDetail.StartDate" class="form-control" />
        </div>

        <div>
            <label>期限:</label>
            <InputDate @bind-Value="taskDetail.DueDate" class="form-control" />
        </div>

        <div>
            <label>終了日:</label>
            <InputDate @bind-Value="taskDetail.CompletionDate" class="form-control" />
        </div>
        <div class="my-3">
            <button type="submit" class="btn btn-primary">保存</button>
            <button type="button" class="btn btn-secondary" @onclick="Cancel">キャンセル</button>
        </div>
    </EditForm>
</div>

@code {
    private Models.TaskDetail taskDetail = new();
    private ConfirmDialog dialog;
    private async Task SaveTask()
    {
        var confirmation = await dialog.ShowAsync(
            title: "本当に作成してもよろしいですか？",
            message1: "この作成により、レコードが削除されます。",
            message2: "続行しますか？"
        );
        if (confirmation)
        {
            var success = await TaskService.CreateTaskAsync(taskDetail);
            if (success)
            {
                Navigation.NavigateTo("/tasksmanagement");
                await JS.InvokeVoidAsync("alert", "レコードは正常に作成されました！");
            }
        }
    }
    private void Cancel()
    {
        Navigation.NavigateTo("/tasksmanagement");
    }

}
