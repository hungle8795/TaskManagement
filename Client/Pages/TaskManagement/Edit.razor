@page "/edit/{id:int}"
@using Client.Services
@inject NavigationManager Navigation
@inject TaskService TaskService

<div class="w-50 mx-auto my-5">
    <h3>タスクの編集</h3>

    @if (taskDetail == null)
    {
        <p>読み込み中...</p>
    }
    else
    {
        <EditForm Model="taskDetail" OnValidSubmit="SaveTask">
            <DataAnnotationsValidator />

            <div>
                <label>名称:</label>
                <InputText @bind-Value="taskDetail.Name" class="form-control" />
                <ValidationMessage For="@(() => taskDetail.Name)" />
            </div>

            <div>
                <label>担当:</label>
                <InputText @bind-Value="taskDetail.Assignee" class="form-control" />
                <ValidationMessage For="@(() => taskDetail.Assignee)" />
            </div>

            <div>
                <label>内容:</label>
                <InputTextArea @bind-Value="taskDetail.Description" class="form-control" />
            </div>

            <div>
                <label>開始日:</label>
                <InputDate @bind-Value="taskDetail.StartDate" class="form-control" />
            </div>

            <div>
                <label>期限:</label>
                <InputDate @bind-Value="taskDetail.DueDate" class="form-control" />
            </div>

            <div>
                <label>終了日:</label>
                <InputDate @bind-Value="taskDetail.CompletionDate" class="form-control" />
            </div>
            <div class="my-3">
                <button type="submit" class="btn btn-primary">保存</button>
                <button type="button" class="btn btn-secondary" @onclick="Cancel">キャンセル</button>
            </div>
        </EditForm>
    }
</div>

@code {
    [Parameter] public int Id { get; set; }
    private Models.TaskDetail? taskDetail;

    protected override async Task OnInitializedAsync()
    {
        taskDetail = await TaskService.GetTaskByIdAsync(Id);
    }

    private async Task SaveTask()
    {
        if (taskDetail != null)
        {
            var success = await TaskService.UpdateTaskAsync(Id, taskDetail);
            if (success)
            {
                Navigation.NavigateTo($"/taskdetail/{Id}");
            }
        }
    }

    private void Cancel()
    {
        Navigation.NavigateTo($"/taskdetail/{Id}");
    }
}
